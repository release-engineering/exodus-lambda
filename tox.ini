[tox]
envlist = py36, static, docs

[testenv]
deps=
	-rrequirements.txt
# Two-phase install is used so that requirements.txt can use hashes
# without also forcing test-requirements.txt to use hashes.
commands_pre=python -m pip install -rtest-requirements.txt
commands=pytest {posargs}
whitelist_externals=sh

# Create a lambda deployment package.
[testenv:package]
skip_install=true
deps=
whitelist_externals=
    sh
    rm
    cp
commands_pre=
commands=
    rm -rf ./package

    # --require-hashes and then --no-deps to avoid using anything untrusted from PyPI
    pip install --require-hashes -r requirements.txt --target ./package
    pip install --no-deps --target ./package .

    # Always using hardcoded config for now.
    cp exodus_lambda/functions/lambda_config.json package

    sh -c 'cd package && zip -r ../package.zip .'
    rm -rf ./package

[testenv:static]
deps=
	-rtest-requirements.txt
	black
	pylint
commands_pre=
commands=
	black --check .
	sh -c 'pylint exodus_lambda; test $(( $? & (1|2|4|32) )) = 0'

[testenv:cov]
deps=
	-rtest-requirements.txt
	pytest-cov
usedevelop=true
commands_pre=
commands=
	pytest --cov-report=html --cov=exodus_lambda {posargs}

[testenv:cov-travis]
passenv = TRAVIS TRAVIS_*
deps=
	-rtest-requirements.txt
	pytest-cov
	coveralls
usedevelop=true
commands_pre=
commands=
	pytest --cov=exodus_lambda {posargs}
	coveralls

[testenv:docs]
deps=
	sphinx
	alabaster
use_develop=true
commands_pre=
commands=
	sphinx-build -M html docs docs/_build

[pytest]
testpaths = tests
addopts = -v
