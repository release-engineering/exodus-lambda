AWSTemplateFormatVersion: 2010-09-09

Description: Configuration for exodus-cdn CodePipeline

Parameters:
  env:
    Type: String
    AllowedValues:
      - dev
      - stage
      - prod
    Default: dev
    Description: The environment in which to deploy functions
  oai:
    Type: String
    Description: The origin access identity ID associated with the environment
  repoOwner:
    Type: String
    Default: release-engineering
    Description: The parent of the targeted repository
  repoName:
    Type: String
    Default: exodus-lambda
    Description: The targeted repository
  repoBranch:
    Type: String
    Default: deploy
    Description: The source branch of the targeted repository
  githubToken:
    Type: String
    Default: None
    Description: A GitHub access token token to authorize webhooks
  region:
    Type: String
    Default: us-east-1
    Description: The region in which resources are established
  email:
    Type: String
    Default: project-exodus@redhat.com
    Description: The email address to which notifications are sent

Conditions:
  IsDev:
    !Equals [!Ref env, dev]
  NotDev:
    !Not [!Equals [!Ref env, dev]]
  NotProd:
    !Not [!Equals [!Ref env, prod]]

Resources:
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub exodus-sns-${env}
      Subscription:
        - Endpoint: !Ref email
          Protocol: email

  CodePipelineNotification:
    Type: AWS::CodeStarNotifications::NotificationRule
    Properties:
      Name: !Sub exodus-pipeline-${env}
      DetailType: FULL
      EventTypeIds:
        - codepipeline-pipeline-pipeline-execution-failed
      Resource:
        !Sub arn:aws:codepipeline:${region}:${AWS::AccountId}:${CodePipeline}
      Targets:
        - TargetType: SNS
          TargetAddress: !Sub arn:aws:sns:${region}:${AWS::AccountId}:exodus-sns-${env}

  CodePipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Condition: IsDev
    Properties:
      Name: !Sub exodus-pipeline-${env}
      AuthenticationConfiguration:
        SecretToken: !Ref githubToken
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/deploy
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version
      RegisterWithThirdParty: true

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub exodus-pipeline-${env}
      ArtifactStore:
        Type: S3
        Location: exodus-pipeline-artifacts
      RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/exodus-codepipe
      Stages:
        # Create Github source for dev pipeline
        - !If
          - IsDev
          - Name: Source
            Actions:
              - Name: Source
                Namespace: SourceVars
                ActionTypeId:
                  Category: Source
                  Owner: ThirdParty
                  Provider: GitHub
                  Version: 1
                Configuration:
                  Owner: !Ref repoOwner
                  Repo: !Ref repoName
                  Branch: !Ref repoBranch
                  OAuthToken: !Ref githubToken
                  PollForSourceChanges: false
                OutputArtifacts:
                  - Name: SourceArtifact
          - !Ref AWS::NoValue
        # Create S3 source for stage, prod pipelines
        - !If
          - NotDev
          - Name: Source
            Actions:
              - Name: Source
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: S3
                  Version: 1
                Region: !Ref region
                Configuration:
                  S3Bucket: exodus-pipeline-artifacts
                  S3ObjectKey:
                    !If
                      - NotProd
                      - build-dev
                      - build-stage
                  PollForSourceChanges: false
                OutputArtifacts:
                  - Name: BuildArtifact
          - !Ref AWS::NoValue
        # Create verify stage for dev pipeline
        - !If
          - IsDev
          - Name: Verify
            Actions:
              - Name: Verify
                ActionTypeId:
                  Category: Invoke
                  Owner: AWS
                  Provider: Lambda
                  Version: 1
                Region: !Ref region
                Configuration:
                  FunctionName: verify_source
                  UserParameters:
                    !Sub '{
                      "repo_url": "https://github.com/${repoOwner}/${repoName}.git",
                      "repo_branch": "${repoBranch}",
                      "commit_id": "#{SourceVars.CommitId}",
                      "whitelist": {
                        "rmcgover": "-----BEGIN PGP PUBLIC KEY BLOCK-----

                                     mQENBFcHM4gBCACSrXco3G1RwEvT/KueQricn6YhuIe1tZSXQAfzLpDuACMwHiP0
                                     TRvempMtU8Shnyrkarezdv5CJm6W14QEG1yf4bwJTAEUbP7gRQC/JwxLWKNTrx++
                                     XXzObWJnhzt4+XSwTjqYbHcfEpXPdNaRYgEOoRnk17HgI7tyrLCHB3ND0rqPS5sS
                                     NANNvApYAMFA9JdKsFgaVCV9hKL9JY+8peHF+p9TOXpp/8rwCFxZfjwHLsQ9F7Bx
                                     FOqlwh4irWoh4htgJ/xyH/2NozV+MCLXeH2bVnkkQ7C5kTWiRyC8PEScDwzr/yrz
                                     XkRAagTQZSHUOwy7ixdQxz9G/pAQ9rvuleXDABEBAAG0JFJvaGFuIE1jR292ZXJu
                                     IDxybWNnb3ZlckByZWRoYXQuY29tPokBPQQTAQgAJwUCVwcziAIbAwUJCWYBgAUL
                                     CQgHAgYVCAkKCwIEFgIDAQIeAQIXgAAKCRBVjuADnroKTpqOB/wO3y7r+1Kpezl8
                                     wkqL5n9Acs6WbpS9TmnWBuiIEVdXkS4eVvb8+zlNFcWyOhYeRcoFdK97jWaAKhZA
                                     Fen6nSjcB/Kk3exk+8fXO7NHe2ujfP2//3CXGvhrE7FNAqsoQoSJ1bXBKef0Gybq
                                     ZjqKGR/xlSCmhvxFoaCkNUeyqpBq4Iw6ScOFjXCVWjKF2WgycqzYyQdyezYwG4BK
                                     orRB35eKWBrMlNrxccjDEi6r+8bjCph02wxbD0JxBvHkK2RuCdflLU/dZGJzP/pz
                                     gi9+/1TCkg34kZ7IYFLJCJIPYZFJrxqPQG5FshrXswJeRd3+2L/9XQERh11xod1w
                                     YuGKhy3ZuQENBFcHM4gBCAC80/8lcCnv+8cqSOKKn/nDS4hBJ1uDTp3tmDfQRxYN
                                     d0U5LYbI1OPz8C1WEuucHlrQ74UAVcgtd3cAhxGB2uU21eEMzGKXivbU6VOqysm9
                                     1WOtA/NPxUZBgKo1JHsa35Ayy75ydm/ZkAyjb6HbJ9xT8+1R2kTx0YAboBjuRgQo
                                     HcYF6yrHQ9/WlwNIz2IRLg8vD+EBJhuZgSTySb4tPHP9caUwa1VuyD8UbZocHUos
                                     poONnAVPaE+zuXtjq3jiXT333afxwIbZJk0qhD6dshvJh0VMHWM0D7fumr+6VS9t
                                     GrQW/gpwnBXflzEzk4mezjuMO8Dfw+s1ZxILbPy9Yf9rABEBAAGJASUEGAEIAA8F
                                     AlcHM4gCGwwFCQlmAYAACgkQVY7gA566Ck6cQgf+Kpk55wniiH2UmaCSZf5eiwI0
                                     dQEutLVS3prjNLsNE1ol5thLvUHAeEWh+OZsSPyLdREce30RNnSj6h1fEjrUmD/J
                                     hH/TjPN0afqHWyTHI1rS5jeYRMTGMTzLg/5I17STwDF9VWIzoWVCyhW0O2R0ORSQ
                                     xRYB7YaXneBhWc7F6cC0mz4mwrcVH952VR9qAKVXK5QR16EZaDumxjB2uH619w68
                                     oekxZ1I7S/t/zqeQ04vucdhRVYyzyfusjtmwSOLkZDdLfeFxqkB7vnns+yGqkLfq
                                     WkotIE5Gq09SL6AXJAVvq9osefk4kDYc5zXmFuA1CHpQJMBziWfOC1c7RndBzw==
                                     =KI3J
                                     -----END PGP PUBLIC KEY BLOCK-----",
                        "ngillett": "-----BEGIN PGP PUBLIC KEY BLOCK-----

                                     mQENBF5Ng98BCAC7fM5zRNaRgAu8Gz63XExQPTVRbmGpGB44DEyjlr+kV1IN7eqN
                                     9qPWgffbYWEyfTupUvL//R7Dbair/yKYqKsPEsUcAiYenND/3Le6sK59NOxrloQL
                                     JdLR1negxIqI3QafOgX/o4eBYFyNl1QfrMWYez7o3rgSvarowfWtyw7q5bSJkIpz
                                     QBDOV2KM78SPkyPaoGVyxmJmKvucBLPV7bDrPrjE3XRCdx0pD0OrdQ8IEXXHyPmK
                                     EZsWtBPFjW4WFr0smHePWAwbkmNDhd6v1Xe8daWaqew1FMwnXpqSPoH1fhU6DqD/
                                     5HklCzVstksJE+jkxLkEBCpDmmgBNWC6srvHABEBAAG0JE5hdGhhbiBHaWxsZXR0
                                     IDxuZ2lsbGV0dEByZWRoYXQuY29tPokBTgQTAQgAOBYhBOutfHvUr1GcmWnL5xFh
                                     NfkfmElYBQJeTYPfAhsDBQsJCAcCBhUKCQgLAgQWAgMBAh4BAheAAAoJEBFhNfkf
                                     mElYDQkIAJDCwnIRHsMhhZhwf8ZUASn1puZhM9h8JvCBhUbJnNTFFOol5cgLyJXR
                                     eUz8dd00ofujt6K4VrhT5Vc2xlZr0x1y6s6e5r1qcdbgjese3qKywC6V+Zao5dic
                                     2DPVQ05bJ/ICvaQjLeFqoO/JTx6HHxp0xsjPCx3DGUdct7cloSlwE4M2ZoBDqO6U
                                     QFMvgMZSPgbwgp72FvLzwlT7+wDdNf4GAsY42Mq92u6cKCNbh8di9RIjJueTMa7/
                                     g8X/Wpso9Oat+d31lKkPDZsuhteUCTUWbRRfYrMGC6xCwZtyfi9VDaqyWB0yHbwK
                                     gUcClwTgYlZ4geHf1QaR2XXaD1z9gQu5AQ0EXk2D3wEIALc2dzMpEncIfdE0zyUC
                                     BsfDWgFEcEFlFh9iWDTe0ly31Wg2bbPiYnk3bc2nywjbq+JzcdBUuIXeazdu+zVh
                                     IXgDBeo8Ms8CT1UPu/3ZmIc5M5AmKZi+AnPnEGiVWcyCaay1b5PpQKra8k7d6zDx
                                     zlEwwraJBBp4s9/DsJZh6Kg15jl90Y6SKbSeq7sViIVcss/Y8mdzFaEve3CBxxU1
                                     5D3XojKDDybHXYo2pNsxuM4Dyk6bKiE7Mh6U7GWKe2h5QP6tHTfqzOnD+1ohrdfl
                                     Emy8JU47vqPKZsqadrKqf2CiXDVuF6eRL3o0RDz2hyp0v8A6V846jrwKotUwV5rB
                                     oy8AEQEAAYkBNgQYAQgAIBYhBOutfHvUr1GcmWnL5xFhNfkfmElYBQJeTYPfAhsM
                                     AAoJEBFhNfkfmElYbxgH/3ectggSQQgIlKqTCv0zQM8wPeOmKkes0p8Bo68xO/JN
                                     5vO9p5+KZAzpkEKyQiAIrdOTiyQhMDDsbT4hCQMnnGbItH3FngA6cXXl3oKfKKNW
                                     NGF4bfcoGsWpqfyefI+x3QNkQqVUGbrJP5QR1w/N9r76yXH6rzpIlLO+nzPGtSLz
                                     XVsG2xjZLRbcfE9H6HhuwnZHtCBrdo0Va27K5FCrdRNe/FKNoC6CSnR2FYMjfH66
                                     mcwQPY757amsIb3i3zN+0S102OgMzIBYr09+hvvxKxZl9RI/4CRbjCFwGcdU86dO
                                     12BwV6fbZVuTzVchN5q00OMeJ2ivzW7J+cvf1jUvCr0=
                                     =XL0W
                                     -----END PGP PUBLIC KEY BLOCK-----"
                      }
                    }'
        # Create build stage for dev pipeline
        - !If
          - IsDev
          - Name: Build
            Actions:
              - Name: Build
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: 1
                Region: !Ref region
                Configuration:
                  EnvironmentVariables:
                    !Sub '[{"name": "ENV_TYPE", "value": "${env}", "type": "PLAINTEXT"},
                    {"name": "AWS_REGION", "value": "${region}", "type": "PLAINTEXT"}]'
                  ProjectName: exodus-codebuild
                InputArtifacts:
                  - Name: SourceArtifact
                OutputArtifacts:
                  - Name: BuildArtifact
          - !Ref AWS::NoValue
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                ParameterOverrides:
                  !Sub '{"env": "${env}", "oai": "${oai}"}'
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/exodus-cloudform
                StackName: !Sub exodus-lambda-${env}
                TemplatePath: BuildArtifact::exodus-lambda-pkg.yaml
              InputArtifacts:
                - Name: BuildArtifact
        # Create promote stage for dev, stage pipelines
        - !If
          - NotProd
          - Name: Promote
            Actions:
              - Name: Approve
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Provider: Manual
                  Version: 1
                Configuration:
                  CustomData: "Approval required for pipeline promotion"
                  NotificationArn: !Sub arn:aws:sns:${region}:${AWS::AccountId}:exodus-sns-${env}
                RunOrder: 1
              - Name: Upload
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: S3
                  Version: 1
                Region: !Ref region
                Configuration:
                  BucketName: exodus-pipeline-artifacts
                  ObjectKey:
                    !Sub build-${env}
                  Extract: false
                InputArtifacts:
                  - Name: BuildArtifact
                RunOrder: 2
          - !Ref AWS::NoValue

  CodePipelineEventRule:
    Type: AWS::Events::Rule
    # Create event rule for stage, prod pipelines
    Condition: NotDev
    Properties:
      EventPattern:
        source:
          - aws.s3
        detail:
          eventSource:
            - s3.amazonaws.com
          eventName:
            - CopyObject
            - PutObject
            - CompleteMultipartUpload
          requestParameters:
            bucketName:
              - exodus-pipeline-artifacts
            key:
              - !If
                - NotProd
                - build-dev
                - build-stage
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${region}:${AWS::AccountId}:${CodePipeline}
          RoleArn: !GetAtt CloudWatchEventRole.Arn
          Id: !Ref CodePipeline

  CodePipelineCloudTrail:
    Type: AWS::CloudTrail::Trail
    # Create trail for stage, prod pipelines
    Condition: NotDev
    Properties:
      S3BucketName: exodus-pipeline-artifacts
      EventSelectors:
        - DataResources:
          - Type: AWS::S3::Object
            Values:
              - !If
                - NotProd
                - arn:aws:s3:::exodus-pipeline-artifacts/build-dev
                - arn:aws:s3:::exodus-pipeline-artifacts/build-stage
          ReadWriteType: WriteOnly
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true

  CodePipelineBucket:
    Type: AWS::S3::Bucket
    # Create artifact bucket for dev pipeline
    Condition: IsDev
    Properties:
      BucketName: exodus-pipeline-artifacts
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  CodePipelineBucketPolicy:
    Type: AWS::S3::BucketPolicy
    # Create artifact bucket policy for dev pipeline
    Condition: IsDev
    Properties:
      Bucket: exodus-pipeline-artifacts
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: arn:aws:s3:::exodus-pipeline-artifacts
          - Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub arn:aws:s3:::exodus-pipeline-artifacts/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    # Create CodeBuild project for dev pipeline
    Condition: IsDev
    Properties:
      Name: exodus-codebuild
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: configuration/buildspec.yaml
      Artifacts:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10

  # Create IAM roles for resources, used for all environments
  CodeBuildRole:
    Type: AWS::IAM::Role
    Condition: IsDev
    Properties:
      RoleName: exodus-codebuild
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: exodus-codebuild-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
      Path: /

  CloudFormationRole:
    Type: AWS::IAM::Role
    Condition: IsDev
    Properties:
      RoleName: exodus-cloudform
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - cloudformation.amazonaws.com
      Policies:
        - PolicyName: exodus-cloudform-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:*
                  - lambda:*
                  - s3:*
                  - cloudfront:*
                  - cloudwatch:*
                  - cloudformation:*
                Resource:
                  - "*"
      Path: /

  CodePipelineRole:
    Type: AWS::IAM::Role
    Condition: IsDev
    Properties:
      RoleName: exodus-codepipe
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Policies:
        - PolicyName: exodus-codepipe-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                  - sns:*
                  - lambda:ListFunctions
                  - lambda:InvokeFunction
                  - s3:*
                  - cloudwatch:*
                  - cloudformation:*
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: "*"
      Path: /

  CloudWatchEventRole:
    Type: AWS::IAM::Role
    Condition: NotDev
    Properties:
      RoleName: !Sub exodus-cloudwatch-${env}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - events.amazonaws.com
      Policies:
        - PolicyName: !Sub exodus-cloudwatch-policy-${env}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Sub arn:aws:codepipeline:${region}:${AWS::AccountId}:${CodePipeline}

Outputs:
  CodePipeline:
    Description: exodus pipeline name
    Value: !Ref CodePipeline
  CodePipelineBucket:
    Description: exodus pipeline artifact bucket ARN
    Value: arn:aws:s3:::exodus-pipeline-artifacts
  CodeBuildProject:
    Description: exodus CodeBuild project ARN
    Value: !Sub arn:aws:codebuild:${region}:${AWS::AccountId}:project/exodus-codebuild
  SNSTopic:
    Description: exodus SNS topic ARN
    Value: !Ref SNSTopic
